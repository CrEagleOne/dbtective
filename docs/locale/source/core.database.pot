# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, CrEagleOne
# This file is distributed under the same license as the DBtective package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: DBtective \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-06-03 12:04+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core.database.rst:2
msgid "core.database package"
msgstr ""

#: ../source/core.database.rst:5
msgid "Submodules"
msgstr ""

#: ../source/core.database.rst:8
msgid "core.database.duck module"
msgstr ""

#: ../../src/core/database/duck.py:docstring of core.database.duck:1
msgid "Module: duckdb Author: creagleone Date: 2025-05-07"
msgstr ""

#: ../../src/core/database/duck.py:docstring of core.database.duck:5
#: ../../src/core/database/oracle.py:docstring of core.database.oracle:5
msgid "Description:"
msgstr ""

#: ../../src/core/database/duck.py:docstring of core.database.duck:6
msgid "This module contains the functions to load and process comparison data"
msgstr ""

#: ../../src/core/database/duck.py:docstring of core.database.duck:8
#: ../../src/core/database/oracle.py:docstring of core.database.oracle:9
msgid "Dependencies:"
msgstr ""

#: ../../src/core/database/duck.py:docstring of core.database.duck:9
msgid "os"
msgstr ""

#: ../../src/core/database/duck.py:docstring of core.database.duck:10
#: ../../src/core/database/oracle.py:docstring of core.database.oracle:11
msgid "wraps (functools)"
msgstr ""

#: ../../src/core/database/duck.py:docstring of core.database.duck:11
msgid "duckdb"
msgstr ""

#: ../../src/core/database/duck.py:docstring of core.database.duck:12
msgid "pandas"
msgstr ""

#: ../../src/core/database/duck.py:docstring of core.database.duck:13
msgid "settings.py"
msgstr ""

#: ../../src/core/database/duck.py:docstring of core.database.duck:14
msgid "common.py"
msgstr ""

#: ../../src/core/database/duck.py:docstring of core.database.duck:15
#: ../../src/core/database/oracle.py:docstring of core.database.oracle:13
msgid "exceptions.py"
msgstr ""

#: ../../src/core/database/duck.py:docstring of core.database.duck:17
#: ../../src/core/database/oracle.py:docstring of core.database.oracle:15
msgid "Usage Example:"
msgstr ""

#: ../../src/core/database/duck.py:docstring of core.database.duck:18
#: ../../src/core/database/oracle.py:docstring of core.database.oracle:16
msgid "N/A"
msgstr ""

#: ../../src/core/database/duck.py:docstring of core.database.duck:21
#: ../../src/core/database/oracle.py:docstring of core.database.oracle:19
msgid "Notes"
msgstr ""

#: ../../src/core/database/duck.py:docstring of core.database.duck:22
msgid "This module uses DuckDB for efficient in-memory SQL processing."
msgstr ""

#: ../../src/core/database/duck.py:docstring of core.database.duck:23
msgid "Designed for handling large datasets efficiently."
msgstr ""

#: ../../src/core/database/duck.py:docstring of core.database.duck.delete_tmp_db:1
msgid "Delete tmp duckDB database"
msgstr ""

#: ../../src/core/database/duck.py:docstring of core.database.duck.get_datas_by_fetchall:1
#: ../../src/core/database/duck.py:docstring of core.database.duck.get_datas_by_fetchdf:1
msgid "Retrieves all rows as a data frame"
msgstr ""

#: ../source/core.database.rst:0
msgid "Parameters"
msgstr ""

#: ../../src/core/database/duck.py:docstring of core.database.duck.get_datas_by_fetchall:3
#: ../../src/core/database/duck.py:docstring of core.database.duck.get_datas_by_fetchdf:3
msgid "SQL query"
msgstr ""

#: ../../src/core/database/duck.py:docstring of core.database.duck.get_datas_by_fetchall:5
#: ../../src/core/database/duck.py:docstring of core.database.duck.get_datas_by_fetchdf:5
msgid "Query args"
msgstr ""

#: ../source/core.database.rst:0
msgid "Returns"
msgstr ""

#: ../../src/core/database/duck.py:docstring of core.database.duck.get_datas_by_fetchall:8
#: ../../src/core/database/duck.py:docstring of core.database.duck.get_datas_by_fetchdf:8
#: ../../src/core/database/oracle.py:docstring of core.database.oracle.get_list_data:10
#: ../../src/core/database/oracle.py:docstring of core.database.oracle.get_unique_data:10
msgid "Query result"
msgstr ""

#: ../source/core.database.rst:0
msgid "Return type"
msgstr ""

#: ../../src/core/database/duck.py:docstring of core.database.duck.load_file_data:1
msgid "Load the contents of a file into the database"
msgstr ""

#: ../../src/core/database/duck.py:docstring of core.database.duck.load_file_data:3
#: ../../src/core/database/duck.py:docstring of core.database.duck.retrieve_file_delimiter:3
msgid "Filename"
msgstr ""

#: ../../src/core/database/duck.py:docstring of core.database.duck.load_file_data:5
msgid "Name of the table"
msgstr ""

#: ../../src/core/database/duck.py:docstring of core.database.duck.load_file_data:8
msgid "True if successful, False otherwise"
msgstr ""

#: ../../src/core/database/duck.py:docstring of core.database.duck.retrieve_file_delimiter:1
msgid "Retrieves the CSV delimiter from the file"
msgstr ""

#: ../../src/core/database/duck.py:docstring of core.database.duck.retrieve_file_delimiter:6
msgid "Delimiter"
msgstr ""

#: ../../src/core/database/duck.py:docstring of functools.wraps:1
#: ../../src/core/database/oracle.py:docstring of functools.wraps:1
msgid "Decorator factory to apply update_wrapper() to a wrapper function"
msgstr ""

#: ../../src/core/database/duck.py:docstring of functools.wraps:3
#: ../../src/core/database/oracle.py:docstring of functools.wraps:3
msgid "Returns a decorator that invokes update_wrapper() with the decorated function as the wrapper argument and the arguments to wraps() as the remaining arguments. Default arguments are as for update_wrapper(). This is a convenience function to simplify applying partial() to update_wrapper()."
msgstr ""

#: ../source/core.database.rst:16
msgid "core.database.oracle module"
msgstr ""

#: ../../src/core/database/oracle.py:docstring of core.database.oracle:1
msgid "Module: oracle Author: creagleone Date: 2025-05-07"
msgstr ""

#: ../../src/core/database/oracle.py:docstring of core.database.oracle:6
msgid "This module contains the functions allowing you to retrieve data from an oracle database"
msgstr ""

#: ../../src/core/database/oracle.py:docstring of core.database.oracle:10
msgid "socket"
msgstr ""

#: ../../src/core/database/oracle.py:docstring of core.database.oracle:12
msgid "oracledb"
msgstr ""

#: ../../src/core/database/oracle.py:docstring of core.database.oracle:20
msgid "This module uses oracledb thin mode"
msgstr ""

#: ../../src/core/database/oracle.py:docstring of core.database.oracle:21
msgid "Designed for handling large datasets efficiently"
msgstr ""

#: ../../src/core/database/oracle.py:docstring of core.database.oracle.get_data_by_segment:1
msgid "Retrieve all datas from a query using segment and fetch"
msgstr ""

#: ../../src/core/database/oracle.py:docstring of core.database.oracle.get_data_by_segment:3
#: ../../src/core/database/oracle.py:docstring of core.database.oracle.get_list_data:3
#: ../../src/core/database/oracle.py:docstring of core.database.oracle.get_unique_data:3
msgid "Database connection"
msgstr ""

#: ../../src/core/database/oracle.py:docstring of core.database.oracle.get_data_by_segment:5
msgid "How many rows are read per segment"
msgstr ""

#: ../../src/core/database/oracle.py:docstring of core.database.oracle.get_data_by_segment:7
msgid "Number of rows to fetch per reading"
msgstr ""

#: ../../src/core/database/oracle.py:docstring of core.database.oracle.get_data_by_segment:9
#: ../../src/core/database/oracle.py:docstring of core.database.oracle.get_list_data:5
#: ../../src/core/database/oracle.py:docstring of core.database.oracle.get_unique_data:5
msgid "Query to perform"
msgstr ""

#: ../source/core.database.rst:0
msgid "Raises"
msgstr ""

#: ../../src/core/database/oracle.py:docstring of core.database.oracle.get_data_by_segment:12
msgid "code 604"
msgstr ""

#: ../../src/core/database/oracle.py:docstring of core.database.oracle.get_data_by_segment:0
msgid "Yields"
msgstr ""

#: ../../src/core/database/oracle.py:docstring of core.database.oracle.get_data_by_segment:14
msgid "*list* -- Segment data"
msgstr ""

#: ../../src/core/database/oracle.py:docstring of core.database.oracle.get_list_data:1
msgid "Retrieve all datas from a query"
msgstr ""

#: ../../src/core/database/oracle.py:docstring of core.database.oracle.get_list_data:8
#: ../../src/core/database/oracle.py:docstring of core.database.oracle.get_unique_data:8
msgid "list of error codes"
msgstr ""

#: ../../src/core/database/oracle.py:docstring of core.database.oracle.get_unique_data:1
msgid "Retrieve the first result of a query"
msgstr ""

#: ../../src/core/database/oracle.py:docstring of core.database.oracle.is_still_active:1
msgid "Checks if the database connection is still active"
msgstr ""

#: ../../src/core/database/oracle.py:docstring of core.database.oracle.is_still_active:3
msgid "Database configuration (unused but included for compatibility)"
msgstr ""

#: ../../src/core/database/oracle.py:docstring of core.database.oracle.is_still_active:6
msgid "Additional arguments, expecting a 'conn' key"
msgstr ""

#: ../../src/core/database/oracle.py:docstring of core.database.oracle.is_still_active:9
msgid "True if the connection is active, False otherwise"
msgstr ""

#: ../source/core.database.rst:24
msgid "Module contents"
msgstr ""
