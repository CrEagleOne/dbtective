name: Complete Pipeline

permissions:
  id-token: write
  contents: write
  pages: write

on:
  push:
    branches:
      - '**'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          sudo apt-get install freeglut3-dev
      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)/src" >> $GITHUB_ENV
      - name: Run the tests
        run: pytest test/

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
    needs: test
    if: |
      contains(github.ref, 'refs/heads/master') ||
      contains(github.ref, 'refs/heads/alpha') ||
      contains(github.ref, 'refs/heads/beta') ||
       contains(github.ref, 'refs/heads/devel')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.base.ref }}
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Build with PyInstaller (Windows)
        if: runner.os == 'Windows'
        run: |
          pyinstaller build.spec
      - name: Upload Windows Artifact
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: app-windows
          path: dist/DBtective.exe
          retention-days: 1

  release:
    needs: build
    if: |
      contains(github.ref, 'refs/heads/master') ||
      contains(github.ref, 'refs/heads/alpha') ||
      contains(github.ref, 'refs/heads/beta')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22
      - name: Download Windows Artifact
        uses: actions/download-artifact@v4
        with:
          name: app-windows
          path: dist
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            npm install --save-dev semantic-release @semantic-release/changelog @semantic-release/git @semantic-release/github conventional-changelog-conventionalcommits
            npx semantic-release --debug

  deploy:
    runs-on: ubuntu-latest
    needs: release
    if: |
      contains(github.ref, 'refs/heads/master')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install libegl1
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build documentation (Sphinx)
        run: sphinx-build -b html docs/ _build/html

      - name: Deploy to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: _build/html

      - name: Deploy
        uses: actions/deploy-pages@v4